server.port=8080

spring.application.name=blog
spring.profiles.active=private


##### 静态资源 #####
# 自定义静态资源目录
spring.resources.static-locations=classpath:/static/
# 自定义静态资源过滤规则
spring.mvc.static-path-pattern=/static/**


##### 文件上传 #####
# 是否开启文件上传支持
spring.servlet.multipart.enabled=true
# 写入磁盘的阈值
spring.servlet.multipart.file-size-threshold=0
# 单个文件最大大小
spring.servlet.multipart.max-file-size=8MB
# 多个文件最大总大小
spring.servlet.multipart.max-request-size=20MB
# 文件是否延迟解析
spring.servlet.multipart.resolve-lazily=false
# 上传的目录
spring.servlet.multipart.location=C:\\Users\\lim\\Downloads


##### springboot 整合 freemarker #####
# HttpServletRequest 的属性是否可以覆盖 controller 中 model 的同名项
spring.freemarker.allow-request-override=false
# HttpSession 的属性是否可以覆盖 controller 中 model 的同名项
spring.freemarker.allow-session-override=false
# 是否开启缓存
spring.freemarker.cache=false
# 模板文件编码
spring.freemarker.charset=UTF-8
# 是否检查模板位置
spring.thymeleaf.check-template=true
# Content-Type
spring.freemarker.content-type=text/html
# 是否将 HttpServletRequest 中的属性添加到 Model 中
spring.freemarker.expose-request-attributes=false
# 是否将 HttpSession 中的属性添加到 Model 中
spring.freemarker.expose-session-attributes=false
# 模板文件后缀
spring.freemarker.suffix=.ftl
# 模板文件位置
spring.freemarker.template-loader-path=classpath:/templates/


##### 整合 redis #####
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
# 连接池最大连接数
spring.redis.jedis.pool.max-active=8
# 连接池最大空闲连接数
spring.redis.jedis.pool.max-idle=8
# 连接池最大阻塞等待时间
spring.redis.jedis.pool.max-wait=-1ms
spring.redis.jedis.pool.min-idle=0


##### 整合kafka #####
# kafka 集群
spring.kafka.bootstrap-servers=127.0.0.1:9092
### 生产者配置 ###
# 每批次发送消息的数量
spring.kafka.producer.batch-size=16
# 设置大于0的值将使客户端重新发送任何数据，一旦这些数据发送失败。注意，这些重试与客户端接收到发送错误时的重试没有什么不同。允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，则第一个消息失败第二个发送成功，则第二条消息会比第一条消息出现要早。
spring.kafka.producer.retries=10
# producer 可以用来缓存的内存大小
spring.kafka.producer.buffer-memory=33554432
# key 序列化方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# value 序列化方式
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


##### 数据库 #####
spring.datasource.url=jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
### druid ###
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
## druid 监控
# 开启监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
# 监控系统用户名，密码
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=123456
# 是否允许清空监控数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 白名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
# 黑名单
#spring.datasource.druid.stat-view-servlet.deny=
# 配置扩展插件，常用的插件有：监控统计用的 stat，日志用的 slf4j，防御 sql 注入的 wall
spring.datasource.druid.filters=stat,wall,slf4j
# 用来打开 SQL 参数化合并监控和慢 SQL 记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个 DruidDataSource 的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true
# 开启 web 监控（Web应用、URI监控、Session监控）
spring.datasource.druid.web-stat-filter.enabled=true
# 需要监控的路径
spring.datasource.druid.web-stat-filter.url-pattern=/*
# 不监控静态文件和监控系统自己的请求
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# 统计请求调用链
spring.datasource.druid.web-stat-filter.profile-enable=true
# 开启 Spring 监控
spring.datasource.druid.aop-patterns=com.limyel.blog.controller.*,com.limyel.blog.service.*,com.limyel.blog.dao.*
# 日志配置
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=true


##### mybatis #####
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.type-aliases-package=com.limyel.blog.entity
mybatis.configuration.map-underscore-to-camel-case=true
### tk.mybatis ###
mapper.notEmpty=true



### pagehelper
# 指定哪种数据库
pagehelper.helperDialect=mysql
# 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
# 为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum, pageSize, count, pageSizeZero, reasonable，不配置映射的用默认值
pagehelper.params=


##### 七牛云 #####
oss.qiniu.domain=xxxxxx
oss.qiniu.access-key=xxxxxx
oss.qiniu.secret-key=xxxxxx
oss.qiniu.bucket-name=xxxxxx


##### okHttp #####
ok.http.connect-timeout=30
ok.http.read-timeout=30
ok.http.write-timeout=30
# 连接池中整体的空闲连接的最大数量
ok.http.max-idle-connections=200
# 连接空闲时间最多为 300 秒
ok.http.keep-alive-duration=300


##### 日志 #####
logging.level.root=info
logging.level.org.springframework=info
logging.level.org.mybatisinfo=info
logging.level.druid.sql.Statement=info
logging.level.druid.sql.ResultSet=info
