<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.limyel.blog.dao.AboutItemMapper">
  <resultMap id="BaseResultMap" type="com.limyel.blog.entity.AboutItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="about_id" jdbcType="BIGINT" property="aboutId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_at, updated_at, deleted, name, link, description, about_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from about_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from about_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.limyel.blog.entity.AboutItem">
    insert into about_item (id, created_at, updated_at, 
      deleted, name, link, description, 
      about_id)
    values (#{id,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{aboutId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.limyel.blog.entity.AboutItem">
    insert into about_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="aboutId != null">
        about_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="aboutId != null">
        #{aboutId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.limyel.blog.entity.AboutItem">
    update about_item
    <set>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="aboutId != null">
        about_id = #{aboutId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.limyel.blog.entity.AboutItem">
    update about_item
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      about_id = #{aboutId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>